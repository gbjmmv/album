{"version":3,"file":"commentStore.js","sources":["stores/commentStore.js"],"sourcesContent":["// src/stores/commentStore.js\r\nimport { defineStore } from 'pinia'\r\nimport { ref, computed } from 'vue'\r\nimport { commentApi } from '@/api/comment'\r\nimport { getAvatarUrl } from \"@/utils/url\"\r\n\r\nexport const useCommentStore = defineStore('comment', () => {\r\n    // State\r\n    const photoComments = ref([])\r\n    const loading = ref(false)\r\n    const currentPage = ref(1)\r\n    const pageSize = ref(10)\r\n    const hasMore = ref(true)\r\n    const loadMoreStatus = ref('more')\r\n\r\n    // Getters\r\n    const isEmpty = computed(() => photoComments.value.length === 0)\r\n\r\n    // Actions\r\n    /**\r\n     * 获取用户评论列表\r\n     * @param {Boolean} refresh - 是否刷新（重置页码）\r\n     */\r\n    async function fetchUserComments(refresh = false) {\r\n        if (refresh) {\r\n            currentPage.value = 1\r\n            photoComments.value = []\r\n            hasMore.value = true\r\n            loadMoreStatus.value = 'more'\r\n        }\r\n\r\n        if (loadMoreStatus.value === 'loading') return\r\n\r\n        try {\r\n            loadMoreStatus.value = 'loading'\r\n            loading.value = currentPage.value === 1\r\n\r\n            const response = await commentApi.getUserComments({\r\n                page: currentPage.value,\r\n                size: pageSize.value\r\n            })\r\n\r\n            if (response.code === 0) {\r\n                const newData = response.data || []\r\n                newData.forEach(photo => {\r\n                    if (photo.url) {\r\n                        photo.url = getAvatarUrl(photo.url)\r\n                    }\r\n                })\r\n                console.log(newData)\r\n                if (currentPage.value === 1) {\r\n                    photoComments.value = newData\r\n                } else {\r\n                    photoComments.value = [...photoComments.value, ...newData]\r\n                }\r\n\r\n                // 判断是否还有更多数据\r\n                hasMore.value = newData.length === pageSize.value\r\n                loadMoreStatus.value = hasMore.value ? 'more' : 'noMore'\r\n            } else {\r\n                uni.showToast({\r\n                    title: response.msg || '获取评论失败',\r\n                    icon: 'none'\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.error('获取评论列表失败', error)\r\n            uni.showToast({\r\n                title: '网络异常，请稍后重试',\r\n                icon: 'none'\r\n            })\r\n        } finally {\r\n            loading.value = false\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载更多评论\r\n     */\r\n    function loadMore() {\r\n        if (!hasMore.value || loadMoreStatus.value === 'loading') return\r\n\r\n        currentPage.value++\r\n        fetchUserComments()\r\n    }\r\n\r\n    /**\r\n     * 添加评论\r\n     * @param {Object} commentData - 评论数据\r\n     */\r\n    async function addComment(commentData) {\r\n        try {\r\n            const response = await commentApi.addComment(commentData)\r\n\r\n            if (response.code === 0) {\r\n                uni.showToast({\r\n                    title: '评论成功',\r\n                    icon: 'success'\r\n                })\r\n\r\n                // 重新加载第一页评论\r\n                fetchUserComments(true)\r\n                return true\r\n            } else {\r\n                uni.showToast({\r\n                    title: response.msg || '评论失败',\r\n                    icon: 'none'\r\n                })\r\n                return false\r\n            }\r\n        } catch (error) {\r\n            console.error('添加评论失败', error)\r\n            uni.showToast({\r\n                title: '网络异常，请稍后重试',\r\n                icon: 'none'\r\n            })\r\n            return false\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新评论\r\n     * @param {Object} commentData - 包含id和content的评论数据\r\n     */\r\n    async function updateComment(commentData) {\r\n        try {\r\n            const response = await commentApi.updateComment(commentData)\r\n\r\n            if (response.code === 0) {\r\n                uni.showToast({\r\n                    title: '修改成功',\r\n                    icon: 'success'\r\n                })\r\n\r\n                // 更新本地数据\r\n                photoComments.value.forEach(photo => {\r\n                    photo.comments.forEach(comment => {\r\n                        if (comment.id === commentData.id) {\r\n                            comment.content = commentData.content\r\n                        }\r\n                    })\r\n                })\r\n\r\n                return true\r\n            } else {\r\n                uni.showToast({\r\n                    title: response.msg || '修改失败',\r\n                    icon: 'none'\r\n                })\r\n                return false\r\n            }\r\n        } catch (error) {\r\n            console.error('修改评论失败', error)\r\n            uni.showToast({\r\n                title: '网络异常，请稍后重试',\r\n                icon: 'none'\r\n            })\r\n            return false\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除评论\r\n     * @param {Object} commentData - 包含id的评论数据\r\n     */\r\n    async function deleteComment(commentData) {\r\n        try {\r\n            const response = await commentApi.deleteComment(commentData)\r\n\r\n            if (response.code === 0) {\r\n                uni.showToast({\r\n                    title: '删除成功',\r\n                    icon: 'success'\r\n                })\r\n\r\n                // 更新本地数据\r\n                photoComments.value.forEach((photo, photoIndex) => {\r\n                    const commentIndex = photo.comments.findIndex(comment => comment.id === commentData.id)\r\n\r\n                    if (commentIndex !== -1) {\r\n                        photo.comments.splice(commentIndex, 1)\r\n\r\n                        // 如果照片没有评论了，则移除整个照片项\r\n                        if (photo.comments.length === 0) {\r\n                            photoComments.value.splice(photoIndex, 1)\r\n                        }\r\n                    }\r\n                })\r\n\r\n                return true\r\n            } else {\r\n                uni.showToast({\r\n                    title: response.msg || '删除失败',\r\n                    icon: 'none'\r\n                })\r\n                return false\r\n            }\r\n        } catch (error) {\r\n            console.error('删除评论失败', error)\r\n            uni.showToast({\r\n                title: '网络异常，请稍后重试',\r\n                icon: 'none'\r\n            })\r\n            return false\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 刷新评论列表\r\n     */\r\n    function refreshComments() {\r\n        fetchUserComments(true)\r\n    }\r\n\r\n    /**\r\n     * 重置状态\r\n     */\r\n    function resetState() {\r\n        photoComments.value = []\r\n        loading.value = false\r\n        currentPage.value = 1\r\n        hasMore.value = true\r\n        loadMoreStatus.value = 'more'\r\n    }\r\n\r\n    return {\r\n        // State\r\n        photoComments,\r\n        loading,\r\n        currentPage,\r\n        pageSize,\r\n        hasMore,\r\n        loadMoreStatus,\r\n\r\n        // Getters\r\n        isEmpty,\r\n\r\n        // Actions\r\n        fetchUserComments,\r\n        loadMore,\r\n        addComment,\r\n        updateComment,\r\n        deleteComment,\r\n        refreshComments,\r\n        resetState\r\n    }\r\n})"],"names":["defineStore","ref","computed","commentApi","getAvatarUrl","uni"],"mappings":"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"}