{"version":3,"names":["albumStore","stores_album","useAlbumStore","photoStore","stores_photo","usePhotoStore","albumList","common_vendor","ref","mainAlbumId","index","getStorageSync","showIndex","selectedAlbumId","preselectedAlbumId","showAlbumSelector","imageAddressList","value","getAlbum","_ref","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","found","i","_i","wrap","_callee$","_context","prev","next","getAlbumList","sent","length","__f__","id","abrupt","coverPhotoUrl","utils_url","getAvatarUrl","stop","apply","arguments","onLoad","_ref2","_callee2","option","_callee2$","_context2","albumId","_x","onShow","id_index","toAlbumList","navigateTo","url","handleClick","confirmUpload","_ref3","_callee3","res","_callee3$","_context3","uploadPhotos","showToast","title","icon","removeStorageSync","navigateBack","wx","createPage","MiniProgramPage"],"sources":["confirm.vue","cGFnZXMvY29uZmlybS9jb25maXJtLnZ1ZQ"],"sourcesContent":["<script setup>\nimport {ref, watch} from 'vue';\nimport {onShow, onLoad} from '@dcloudio/uni-app'\nimport {useAlbumStore} from '@/stores/album.js'\nimport {getAvatarUrl} from \"@/utils/url\";\nimport {usePhotoStore} from '@/stores/photo.js'\n\nconst albumStore = useAlbumStore()\nconst photoStore = usePhotoStore()\nconst albumList = ref([])\nconst mainAlbumId = uni.getStorageSync('main album')\nconst showIndex = ref(0)\n\n// 读取缓存的相册id和路由传递的相册id\nconst selectedAlbumId = ref();\nconst preselectedAlbumId = ref(null);\n// 是否显示选择相册部分\nconst showAlbumSelector = ref(true);\n\n// 用户选择的图片\nconst imageAddressList = ref([])\nimageAddressList.value = uni.getStorageSync('selectedMediaFiles')\n\nconst getAlbum = async () => {\n  albumList.value = await albumStore.getAlbumList()\n\n  // 如果有预选的相册ID，则选择该相册\n  if (preselectedAlbumId.value) {\n    selectedAlbumId.value = preselectedAlbumId.value\n    // 找到预选相册的索引\n    let found = false\n    for (let i = 0; i < albumList.value.length; i++) {\n      console.log(\"第\",i)\n      console.log(\"albumList.value[i].id： \",albumList.value[i].id)\n      console.log(\"preselectedAlbumId.value： \",preselectedAlbumId.value)\n\n      if (albumList.value[i].id == preselectedAlbumId.value) {\n        showIndex.value = i\n        found = true\n        break\n      }\n    }\n    console.log(found)\n\n    // 如果没找到匹配的相册，为安全起见也设置默认值\n    if (!found) {\n      selectedAlbumId.value = albumList.value[0].id\n      showIndex.value = 0\n    }\n  } else {\n    // 否则默认选择第一个相册\n    selectedAlbumId.value = albumList.value[0].id\n    showIndex.value = 0\n  }\n\n  // 处理相册封面\n  for (let i = 0; i < albumList.value.length; i++) {\n    if (albumList.value[i].coverPhotoUrl) {\n      albumList.value[i].coverPhotoUrl = getAvatarUrl(albumList.value[i].coverPhotoUrl)\n    } else {\n      albumList.value[i].coverPhotoUrl = \"/static/image/classify.png\"\n    }\n  }\n}\n\nonLoad(async (option) => {\n  // 获取路由参数中的相册ID\n  if (option.albumId) {\n    preselectedAlbumId.value = option.albumId\n    // 如果是从相册页面进入，不显示选择相册部分\n    showAlbumSelector.value = false\n  }\n\n  await getAlbum()\n})\n\nonShow(() => {\n  // 如果从相册列表页面返回，更新选中的相册\n  if (albumStore.id_index.value && albumStore.id_index.value.id) {\n    showIndex.value = albumStore.id_index.value.index\n    selectedAlbumId.value = albumStore.id_index.value.id\n  }\n\n  // 确保界面显示正确的相册\n  if (selectedAlbumId.value) {\n    for (let i = 0; i < albumList.value.length; i++) {\n      if (albumList.value[i].id === selectedAlbumId.value) {\n        showIndex.value = i\n        break\n      }\n    }\n  }\n});\n\nconst toAlbumList = () => {\n  uni.navigateTo({\n    url: '/pages/album_list/album_list'\n  });\n}\n\nconst handleClick = () => {\n  // 处理点击相册的事件\n  toAlbumList()\n}\n\n\nconst confirmUpload = async () => {\n  console.log(\"selectedAlbumId.value: \",selectedAlbumId.value)\n  const res = await photoStore.uploadPhotos(\n      imageAddressList.value,\n      selectedAlbumId.value,\n      mainAlbumId\n  )\n  if (res) {\n    uni.showToast({ title: '上传成功', icon: 'success' });\n    uni.removeStorageSync('selectedMediaFiles'); // 清空已选照片缓存\n    uni.navigateBack();\n  }\n}\n</script>\n<template>\n  <view class=\"confirm-container\">\n    <!--选择相册 - 仅在非相册直接上传时显示 -->\n    <view v-if=\"showAlbumSelector\" class=\"choose-album\">\n      <view class=\"text\">选择相册</view>\n\n      <view class=\"container\" @click=\"handleClick\">\n        <view class=\"left\">\n          <image :src=\"albumList[showIndex].coverPhotoUrl\" mode=\"aspectFill\"></image>\n        </view>\n        <view class=\"right\">\n          <view class=\"title\">{{ albumList[showIndex].name }}</view>\n          <view class=\"number\">{{ albumList[showIndex].number }}张</view>\n        </view>\n      </view>\n      <uni-icons @click=\"toAlbumList\" class=\"icon\" type=\"right\" size=\"20\"></uni-icons>\n    </view>\n\n\n\n    <view class=\"showPic\">\n      <image v-for=\"(pic,index) in imageAddressList\" :key=\"index\" :src=\"pic\"></image>\n    </view>\n\n    <!-- 底部上传按钮 -->\n    <view class=\"upload-btn-container\">\n      <button class=\"upload-btn\" @click=\"confirmUpload\">确认上传</button>\n    </view>\n  </view>\n</template>\n\n<style scoped>\n.container .right {\n  padding-right: 35rpx;\n  text-align: right;\n}\n\n\n.container .right .title {\n  font-size: 40rpx;\n}\n\n.container .left image {\n  height: 120rpx;\n  width: 120rpx;\n  border-radius: 10rpx;\n  transform: translateY(7rpx);\n}\n\n.container {\n  display: flex;\n  align-items: center;\n  flex-direction: row-reverse;\n  width: 400rpx;\n  height: 150rpx;\n  transform: translateX(30rpx);\n}\n\n\n.showPic {\n  display: flex;\n  flex-wrap: wrap;\n  padding: 10rpx;\n  gap: 20rpx; /* 设置图片之间的间距 */\n  margin-left: 3rpx;\n  margin-top: 20rpx;\n  margin-bottom: 30rpx\n}\n\n.showPic image {\n  width: 230rpx;\n  object-fit: cover;\n  height: 230rpx;\n}\n\n\n.choose-album .icon {\n  margin-right: 20rpx;\n}\n\n.choose-album .album {\n  margin-left: auto\n}\n\n.choose-album .text {\n  font-size: 40rpx;\n  font-weight: bold;\n  margin-left: 20rpx;\n}\n\n.choose-album {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n\n.confirm-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: #f7f7f7;\n}\n\n\n.upload-btn-container {\n  padding: 20px 16px;\n  background-color: #ffffff;\n}\n\n.upload-btn {\n  width: 100%;\n  height: 44px;\n  line-height: 44px;\n  background-color: #07c160;\n  color: #ffffff;\n  font-size: 16px;\n  border-radius: 4px;\n}\n</style>\n","import MiniProgramPage from 'C:/Users/ADMIN/Documents/HBuilderProjects/album/pages/confirm/confirm.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}